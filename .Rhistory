install.packages (KernSmooth)
install.packages ("KernSmooth")
library(KernSmooth)
library(datasets)
data(iris)
?iris
mean(Sepal.Length)
mean(iris$Species)
iris
iris$sepal.Width
iris$Sepal.Width
iris$Sepal.Width[which(iris[,"Species"] == 'virginica')]
mean(iris$Sepal.Width[which(iris[,"Species"] == 'virginica')])
iris
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
library(datasets)
data(mtcars)
?mtcars
mtcars
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
?with
with(mtcars, tapply(hp, cyl, average))
?tapply
?average
with(mtcars, tapply(hp, cyl, mean))
x <- 209.21429 - 82.63636
x
debug(ls)
ls
library(datasets)
data(iris)
irisVir <- iris[iris(which[,"Species"] == 'virginica')]
library(datasets)
data(iris)
irisVir <- iris[iris(which[,"Species"] == 'virginica')]
irisVir <- iris[which(iris[,"Species"] == 'virginica'), ]
irisVir
apply(irisVir[,1:4], 2, mean)
source(cachematrix.R)
source("cachematrix.R")
setwd("~/ProgrammingAssignment2")
source("cachematrix.R")
m <- matrix (rep (rnorm(10),2), rep(rnom(20),2) )
m <- matrix (1:9, 3, 3)
m
makeCacheMatrix(m)
source("cachematrix.R")
m <- matrix (1:9, 3, 3)
makeCacheMatrix(m)
source("cachematrix.R")
m <- matrix (1:9, 3, 3)
makeCacheMatrix(m)
cacheSolve(m)
makeCacheMatrix(m)
t <- makeCacheMatrix(m)
cacheSolve(t)
setwd("~/RProgramming")
source(makeVector)
source("makeVector.R")
x <- 12:514
vec <- cachemean(vec)
vec <- makeVector(x)
cachemean(vec)
cachemean(vec)
cachemean(vec)
x <- matrix(1:9, 3, 3)
vec <- makeVector(x)
cachemean(vec)
cachemean(vec)
x <- matrix(1:9, 3, 3)
vec <- makeCacheMatrix(x)
cacheSolve(vec)
source("cachematrix.R")
setwd("~/ProgrammingAssignment2")
x <- matrix(1:9, 3, 3)
vec <- makeCacheMatrix(x)
vec
cacheSolve(vec)
t <- cbind((1,0,1), c(0,1,2),c(0,0,1))
t <- cbind(c(1,0,1), c(0,1,2),c(0,0,1))
vec <- makeCacheMatrix(t)
cacheSolve(vec)
cacheSolve(vec)
f <- matrix (1:4, 2,2)
vec <- makeCacheMatrix(f)
cacheSolve(vec)
cacheSolve(vec)
f <- matrix (1:4, 2,2)
vec <- makeCacheMatrix(f)
cacheSolve(vec)
cacheSolve(vec)
vec <- makeCacheMatrix(t)
cacheSolve(vec)
cacheSolve(vec)
t <- cbind(c(1,0,1), c(0,1,2),c(0,0,1))
vec <- makeCacheMatrix(t)
cacheSolve(vec)
cacheSolve(vec)
vec2 <- makeCacheMatrix(f)
cacheSolve(vec2)
cacheSolve(vec)
?gl
f <- (20, 15)
f <- gl(20, 15)
f
f <- gl(5, 7)
f
